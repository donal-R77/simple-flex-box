name: Pipeline

on: [push]
env:
  APPLICATION_NAME: flexbox
jobs:
  lint:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - run: echo "done" 
  build-image:
     needs: [lint]
     runs-on: ubuntu-18.04
     steps:
      - uses: actions/checkout@v1
      - name: Set up GCloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '274.0.1'
          service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_MAIL }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      - run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud auth configure-docker
          gcloud info
    
      - name: Build and tag image
        run: docker build -t "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest" .
      
      - name: Push to GCP image registry
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest 

  test-image:
    needs: [build-image]
    runs-on: ubuntu-18.04
    steps:
      - name: Set up GCloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '274.0.1'
          service_account_email: ${{ secrets.GCP_SERVICE_ACCT_EMAIL }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
      - run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud auth configure-docker
          gcloud info
        
      - name: Run unit tests in container
        run: docker run "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest" -m unittest --verbose --failfast 
